// Mocks generated by Mockito 5.4.0 from annotations
// in mvvm_movie_app/test/presentation/home/now_playing/now_playing_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mvvm_movie_app/data/failure.dart' as _i6;
import 'package:mvvm_movie_app/domain/entity/movie/genre_entity.dart' as _i7;
import 'package:mvvm_movie_app/domain/entity/movie/movie_detail_entity.dart'
    as _i9;
import 'package:mvvm_movie_app/domain/entity/movie/movie_entity.dart' as _i8;
import 'package:mvvm_movie_app/domain/repository/movie_repository.dart' as _i2;
import 'package:mvvm_movie_app/domain/usecase/movie_usecase.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieRepository_0 extends _i1.SmartFake
    implements _i2.MovieRepository {
  _FakeMovieRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieUseCase extends _i1.Mock implements _i4.MovieUseCase {
  MockMovieUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get movieRepository => (super.noSuchMethod(
        Invocation.getter(#movieRepository),
        returnValue: _FakeMovieRepository_0(
          this,
          Invocation.getter(#movieRepository),
        ),
      ) as _i2.MovieRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.GenreEntity>>> getGenres() =>
      (super.noSuchMethod(
        Invocation.method(
          #getGenres,
          [],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.GenreEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.GenreEntity>>(
          this,
          Invocation.method(
            #getGenres,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.GenreEntity>>>);
  @override
  _i5.Future<
      _i3.Either<_i6.Failure, List<_i8.MovieEntity>>> getNowPlayingMovies(
          int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [page],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i8.MovieEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i8.MovieEntity>>(
          this,
          Invocation.method(
            #getNowPlayingMovies,
            [page],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i8.MovieEntity>>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i8.MovieEntity>>> getPopularMovies(
          int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [page],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i8.MovieEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i8.MovieEntity>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [page],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i8.MovieEntity>>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i8.MovieEntity>>> getTopRatedMovies(
          int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [page],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i8.MovieEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i8.MovieEntity>>(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [page],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i8.MovieEntity>>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i8.MovieEntity>>> getUpComingMovies(
          int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUpComingMovies,
          [page],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i8.MovieEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i8.MovieEntity>>(
          this,
          Invocation.method(
            #getUpComingMovies,
            [page],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i8.MovieEntity>>>);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i9.MovieDetailEntity>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i9.MovieDetailEntity>>.value(
                _FakeEither_1<_i6.Failure, _i9.MovieDetailEntity>(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i9.MovieDetailEntity>>);
}
